# 작업 디렉터리
# . 또는 절대 경로, 참고로 다음 디렉터리는 반드시 root 하위에 있어야 한다.
root = "."
tmp_dir = "tmp"

[build]
# 기본적인 셸 명령어로, `make`로도 사용할 수 있다.
cmd = "go build -o ./tmp/main ."
# `cmd` 명령어로 생성된 바이너리 파일
bin = "tmp/main"
# 바이너리 실행 시 환경 변수를 설정할 수 있다.
full_bin = "APP_ENV=dev APP_USER=air ./tmp/main 80"
# 감시할 파일 확장자
include_ext = ["go", "tpl", "tmpl", "html"]
# 무시할 파일 확장자 또는 디렉터리
exclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules", "_tools", "cert", "testutil"]
# 감시할 특정 디렉터리를 지정할 수 있다.
include_dir = []
# 제외할 파일
exclude_file = []
# 제외할 정규 표현식
exclude_regex = ["_test.go"]
# 변경되지 않은 파일을 제외한다.
exclude_unchanged = true
# 디렉터리에 대한 심볼릭 링크를 따른다.
follow_symlink = true
# 이 로그 파일은 tmp_dir에 생성된다.
log = "air.log"
# 파일 변경이 너무 자주 발생할 경우 매번 빌드를 트리거할 필요가 없다.
delay = 1000 # ms
# 빌드 오류 발생 시 실행 중인 바이너리를 중지한다.
stop_on_error = true
# 프로세스를 종료하기 전에 Interrupt 신호를 보낸다. (윈도우에서는 지원되지 않음)
send_interrupt = false
# Interrupt 신호 전송 후 대기 시간
kill_delay = 500 # ms
# 바이너리(bin/full_bin)를 실행할 때 추가 인수를 지정할 수 있다. 예: './tmp/main hello world'.
# args_bin = ["hello", "world"]

[log]
# 로그 시간 표시
time = false

[color]
# 각 파트의 색상을 사용자 정의. 설정된 색상이 없으면 앱 로그의 기본 색상을 사용한다.
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# 종료 시 tmp 디렉터리를 삭제
clean_on_exit = true